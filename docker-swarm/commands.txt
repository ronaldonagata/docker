#List virtual machines
docker-machine ls

#Create virtual machines with virtualbox as driver 
docker-machine create -d virtualbox <name>

#Start machine VM
docker-machine start <name>

#Connect via ssh to VM
docker-machine ssh <name>

#Init swarm in a virtual machine, this node will be the first manager
docker swarm init --advertise-addr <IP_HOST_ADDRESS> 

#Show token to join as worker
docker swarm join-token worker

#Commands which change or show swarm status must be executed in manager node 
#Show node information, must be executed in manager node
docker node ls

#Docker swarm leave
docker swarm leave

#Create service
docker service create -p 8080:3000 aluracursos/barbearia

#List service in swarm
docker service ls

# Use the folder /var/lib/docker/swarm as backup folder to create the new cluster
docker swarm init --force-new-cluster --advertise-addr <IP_HOST_ADDRESS> 

# Change manager role to worker node 
docker node demote <nodeId>

#Change status node
docker node update --availability <status> <node>

#Add constraint to restrict to run in worker nodes only. There's anothers constraints
docker service update --constraint-add node.role==worker <serviceId>

#Change replicas numbers 
docker service update --replicas 8 <serviceID>

# Up as global service. Global service run one instance in every node
docker service create -p 8080:3000 --mode global aluracursos/barbearia 

#Create a network overlay that could attach a standlone containers with the flag "attachable"
docker network create -d overlay --attachable my_overlay

#Create a service that is attached to a user definied network. In this way you can use service discovery
docker service create --name my_service --network=myoverlay --replicas 2 alpine sleep 1d